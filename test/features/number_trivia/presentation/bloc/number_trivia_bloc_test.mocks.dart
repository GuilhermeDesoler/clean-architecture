// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_project/test/features/number_trivia/presentation/bloc/number_trivia_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_project/core/error/failures.dart' as _i5;
import 'package:flutter_project/core/util/imput_converter.dart' as _i4;
import 'package:flutter_project/features/number_trivia/presentation/bloc/number_trivia_bloc.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTriviaForConcreteNumber].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTriviaForConcreteNumber extends _i1.Mock
    implements _i3.GetTriviaForConcreteNumber {
  MockGetTriviaForConcreteNumber() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get numberString => (super.noSuchMethod(
        Invocation.getter(#numberString),
        returnValue: '',
      ) as String);
  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
}

/// A class which mocks [GetTriviaForRandomNumber].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTriviaForRandomNumber extends _i1.Mock
    implements _i3.GetTriviaForRandomNumber {
  MockGetTriviaForRandomNumber() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Object> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object>[],
      ) as List<Object>);
}

/// A class which mocks [InputConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputConverter extends _i1.Mock implements _i4.InputConverter {
  MockInputConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i5.Failure, int> stringTounsignedInteger(String? str) =>
      (super.noSuchMethod(
        Invocation.method(
          #stringTounsignedInteger,
          [str],
        ),
        returnValue: _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #stringTounsignedInteger,
            [str],
          ),
        ),
      ) as _i2.Either<_i5.Failure, int>);
}
